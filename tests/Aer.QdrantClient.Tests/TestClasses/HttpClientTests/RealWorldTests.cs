using Aer.QdrantClient.Http;
using Aer.QdrantClient.Http.Models.Primitives;
using Aer.QdrantClient.Http.Models.Requests.Public;
using Aer.QdrantClient.Http.Models.Shared;
using Aer.QdrantClient.Tests.Base;

namespace Aer.QdrantClient.Tests.TestClasses.HttpClientTests;

internal class RealWorldTests : QdrantTestsBase
{
    private QdrantHttpClient _qdrantHttpClient;

    //[OneTimeSetUp]
    public void Setup()
    {
        //_qdrantHttpClient = new QdrantHttpClient(httpAddress: new Uri("xxxx"), apiKey: "xxxx");

        Initialize();
        _qdrantHttpClient = ServiceProvider.GetRequiredService<QdrantHttpClient>();
    }

    //[SetUp]
    public async Task BeforeEachTest()
    {
        await ResetStorage();
    }

    //[Test]
    public async Task Insert_PotentialDuplicates()
    {
        double[] vectorValues =
        [
            0.8787277, -0.12667769, -0.7186715, 0.34238216, 0.6529496, 0.9607358, -1.3407203, -0.05516983, -1.7969699, -0.7624036,
            0.65227294, 1.7223959, 0.09729745, -2.4250467, -0.08025115, 0.5078333, 0.54697776, -0.033634894, 0.15833203,
            0.21261647, -0.32772928, -1.6786869, 1.8116331, -1.1187942, -0.18101482, 0.8181769, 0.9910732, -0.9036228, 0.52683735,
            0.60595685, 0.26787117, 0.92041886, 0.07284273, 0.2019225, 0.03758349, 0.42735377, -1.1501304, -0.33530962,
            -0.39584225, 0.3444461, 0.30743706, 0.20174314, -0.6723415, -0.81343776, 0.22216296, 0.9629104, 0.49917975, 0.1253293,
            1.7895324, -0.5767184, -0.24828121, -0.37844908, 0.5543383, -0.28737727, -0.77188087, 0.8510002, 0.012442401,
            1.5333815, -0.1764392, 0.53742635, 1.0552515, 0.6427478, -1.2882686, 0.5319315, -0.34650293, 0.49427897, -1.4467622,
            -0.5469479, 0.57641643, -0.2019957, -0.04420572, 1.1196884, -2.2209835, 1.6788898, 2.0373118, -1.0778058,
            -0.009934462, -0.4139702, -0.69643164, 0.25623098, 0.32013777, -1.4178662, 1.453767, -1.2854156, -0.4249559,
            -0.30052775, 0.17239584, -0.50819284, -0.16630816, 1.0546737, 0.61845076, 0.24718234, 2.4906254, -0.015319358,
            -0.9086923, 0.4294072, -0.99935985, -0.76197976, 0.7935137, -0.6133997, -0.22259578, 0.86507255, -0.09916944,
            0.37028685, 0.80937463, -0.6712452, 1.1897688, 0.49789405, -0.33125377, 0.55039316, -1.354061, 0.8627084, -0.9022874,
            -0.93917066, -0.16807975, -1.1731709, -0.7422827, -0.06411026, 0.55880874, -0.26387215, 0.36252126, 0.5204782,
            0.7125336, 0.27464563, 1.1216135, 1.2514266, 0.13544944, -1.5647521, 0.18598576, -1.2527033, 0.99144787, 0.34679794,
            -0.2697392, 1.0366445, 1.3917675, -1.2708815, 0.024458002, 1.8469185, -0.689326, -0.033687282, -0.80873257,
            -0.71935505, -0.6340056, 1.0534958, 0.72728986, -0.5091157, 1.1847786, 0.2579973, -0.7781229, 1.1513027, -0.3197454,
            -0.09275967, -1.517871, 0.6641441, 0.9902656, -0.6616016, -0.11708812, 0.3848811, -0.7450218, -0.15346283,
            -0.12680641, 0.84451014, -0.22541003, 0.5130689, 1.5078639, -0.6375235, -0.84930354, -0.08352368, 0.7430522,
            0.7071425, 0.8862804, 0.17265064, -0.4824108, -0.28339827, 0.8509444, -0.17535354, -0.72051644, 0.76037323,
            -1.1822718, -0.7893503, 0.21765956, -1.7401054, 0.4807144, -0.31567746, -0.59089583, -0.31763244, -0.94468486,
            0.94246274, -0.39586225, 0.89199513, 0.594007, 0.9916114, -0.53250146, 1.0358723, -0.24703725, 0.084327, 0.3515454,
            -1.5411878, -0.72129846, -0.5929884, 0.12395483, -0.12162623, 0.5648287, 0.48899993, 1.7190678, 0.48719347,
            0.39768988, -1.4440762, -0.1956659, -0.16685535, 0.79280394, 0.59123456, 0.05968815, -0.5370751, 0.3405953,
            0.037846852, -0.54680467, -1.0382084, 0.10517099, 0.059624612, 0.2955938, -0.6123637, -0.98756886, 0.9852787,
            0.1581021, 0.9339213, 0.49789104, -0.4312542, -0.031734288, 0.30151346, 0.03686244, -1.1644927, -0.82578963,
            -0.06669572, -0.1854245, 0.8741835, 0.494995, 0.7991263, 0.24562435, -0.07677714, -0.6491161, -0.56996995, -1.2649933,
            -1.4961032, -0.4751646, 1.732204, -0.555802, -0.23781323, -1.1293327, 1.320839, 0.09036978, -0.94374526, 1.322917,
            -1.3895092, 0.19756766, -0.13919646, 0.47781587, -0.20061557, 0.67796314, -0.31007573, 0.43472952, -1.0065655,
            0.5434207, -0.046010192, -0.25432864, -0.6564347, -0.006997475, 0.31825593, -0.041912682, 0.6208696, -0.48142615,
            0.5215936, 0.75489926, 0.47194797, -1.1523833, -0.5080032, 0.866584, -0.6534219, 0.3504536, 1.0557897, 0.26673266,
            -0.01611403, -0.9472906, 0.22016095, 1.1266252, 0.412308, -0.35885072, 1.0847564, -0.28795362, -0.81483984,
            -0.08677676, -0.46779558, 0.24048287, 1.7833129, 0.070527196, -0.67235833, 0.24987414, 1.7617239, -0.64356244,
            -0.97504437, -0.24353482, 0.12571855, 1.3705792, -0.73937654, 1.1452163, -0.152253, -0.8273829, 0.90302277, 1.1564949,
            0.7504338, 0.3096949, -1.0588862, -0.4860868, 0.24086839, 0.050243527, -0.4784744, 1.0043734, 0.37202817, 0.4627104,
            -0.103317946, -0.122625, 0.25616556, 0.41967472, -0.19348906, 0.19735594, -0.15588602, 0.047392175, 0.25112972,
            2.953613, -0.29593137, -0.5552204, 0.5595832, -1.3755706E-4, 0.12248584, 0.14107664, 0.9309887, 0.18906182,
            0.31736723, 0.28343913, -0.80899143, -0.64428014, 0.79907346, 0.41659647, 0.84765303, 0.20792724, 0.61453986,
            -0.61848086, 2.055193, -1.0874099, -0.5214486, 1.0196381, 0.013860736, 1.2782339, -0.023881333, -0.02746086,
            -0.06130017, 0.8312153, -1.3321444, 1.2861744, 1.2306224, 0.4554941, -0.20363781, -0.8932166, -0.17654727, 1.1325674,
            -0.0062872786, -0.22994441, 0.37878484, -0.46191177, -0.2876548, -0.4517125, 1.1765171, -0.43365413, -0.12537464,
            1.5034276, -0.40545377, 0.9174505, -1.1173459, -1.6503786, -0.10015173, -0.90019226, -0.68255574, -0.18115757,
            0.7231627, -0.21559593, -1.8912551, -0.71634316, -0.4794962, 0.5201837, 0.47890627, -1.2738028, 0.7875262, -0.7323423,
            0.5981152, -1.5194628, -0.68206453, 0.55715734, -0.71382266, -0.25260982, -1.3942575, -0.062177967, 0.2570095,
            -1.1972195, 0.8392429, 0.32122442, -1.4879935, -0.074141435, -0.51811934, 0.6083805, -0.4347049, -0.28747907,
            -0.53847784, 0.34835902, 0.35684016, -1.9651749, -0.30336195, 0.33380833, 0.8355069, 0.69799054, -0.81458056,
            -1.08207E-4, -0.88231516, 0.42223445, -0.22387332, -0.25584438, -1.2549261, 0.19197018, 1.0597714, -0.05390944,
            -0.8712299, 0.11868691, -0.39711228, -0.42881098, -0.36508253, -0.2043958, 1.1044091, -0.4887433, 0.98630166,
            -0.27948484, -1.3371253, 1.0713089, 0.8232338, -1.5204235, -0.14225918, 0.0061889407, 0.80432254, -1.060877,
            -2.3563209, 0.45460993, -0.78842765, 1.8508009, 1.1128857, -0.90657085, -1.6021861, -0.018929005, -0.05374071,
            0.7287444, -0.27699175, 0.4336507, -0.55254626, -0.5399616, 1.050981, 0.8805241, -0.5352121, -0.8254075, 0.73965216,
            -0.36950216, 0.27920407, 0.975007, 0.70045465, -0.75595695, -0.20699213, -0.01561932, 0.17289829, 1.8555359, 0.987874,
            -0.24096327, -0.65981513, 3.2516613, -0.5791811, 0.4024555, -2.0862217, -0.05749172, -1.076627, -0.25568238,
            -1.0165868, 0.1722168, -1.5710533, 0.5874765, -0.87118876, -0.69088703, 0.22106896, -0.5536876, -1.1332498,
            -0.7522742, 0.9495158, 0.8730732, 0.49048796, 1.0684347, 0.72184396, 0.13845037, -1.5253767, -0.18179461, -0.1182861,
            0.49265796, 0.108968474, 1.1427176, 1.019475, 0.07403621, -0.4736319, -0.1721225, -0.6582855, 0.08298, 0.12150421,
            -1.1602398, 0.069540955, 0.4169343, 1.1188469, -0.6559852, -1.9269425, -0.9092291, 0.09539858, 0.33531758, 0.14254138,
            -0.06950257, -0.6670472, 0.11221711, -0.61708814, 0.14753844, -0.36115593, -0.47757024, 0.24025008, 0.48828104,
            0.5329228, -1.3107795, -0.9958538, -0.29743877, -0.23368645, 0.38540167, -1.7322296, 0.28053617, -0.20590323,
            -0.94827336, -1.0346721, -2.2133863, 0.2952047, -0.40132624, -0.73111236, 0.8975786, -0.30890113, 0.41210577,
            0.61022145, -0.69348776, 0.0472737, -0.6242427, 1.2014728, -0.045957994, 0.3784231, 0.4986334, 1.3898466, 0.09845215,
            1.0892072, 1.0990702, -0.33229685, -0.82345635, 0.62852186, 0.114481926, -0.3608969, 0.6493167, -0.4552299,
            0.12743402, 0.88344306, -1.3145031, -0.66918176, -1.2367066, 0.108011596
        ];

        var vector = vectorValues.Select(v => (float) v).ToArray();

        var payload = new
        {
            cate_local_lv6_id = 7788,
            source_id_item_id = "0_1005007053586082"
        };

        (await _qdrantHttpClient.CreateCollection(
            TestCollectionName,
            new CreateCollectionRequest(VectorDistanceMetric.Cosine, vectorSize: 576, isServeVectorsFromDisk: true),
            CancellationToken.None)).EnsureSuccess();

        (await _qdrantHttpClient.UpsertPoints(
            TestCollectionName,
            new UpsertPointsRequest()
            {
                Points =
                [
                    new UpsertPointsRequest.UpsertPoint(PointId.NewGuid(), vector, payload)
                ]
            },
            CancellationToken.None)).EnsureSuccess();

        await _qdrantHttpClient.EnsureCollectionReady(TestCollectionName, CancellationToken.None);

        var collectionInfo = (await _qdrantHttpClient.GetCollectionInfo(
            TestCollectionName,
            isCountExactPointsNumber: true,
            CancellationToken.None)).EnsureSuccess();

        collectionInfo.PointsCount.Should().Be(1);

        var pointsReadBack = (await _qdrantHttpClient.SearchPoints(
            TestCollectionName,
            new SearchPointsRequest(vector, limit: 10, withVector: true, withPayload: true),
            CancellationToken.None)).EnsureSuccess();

        pointsReadBack.Length.Should().Be(1);
    }

    //[Test]
    public async Task Search()
    {
        double[] vectorRaw =
        [
            0.06732, -0.053447, 0.018991, 0.091428, 0.065955, -0.083695, -0.001819, -0.025018, -0.034342, 0.064136, -0.060952,
            -0.036844, -0.045032, 0.083695, -0.097796, -0.037754, 0.097341, -0.060042, -0.075507, 0.038891, -0.02479, -0.064136,
            0.090973, -0.016375, 0.008358, 0.093702, 0.080966, -0.04958, -0.083695, 0.094157, 0.015124, -0.043667, -0.006283,
            -0.069594, 0.094157, 0.039118, -0.039346, 0.000174, 0.06732, 0.025472, -0.022061, -0.068685, 0.075507, -0.00021,
            0.015807, -0.023994, 0.008415, -0.002004, 0.045259, -0.030931, -0.004236, 0.035934, -0.030248, -0.096886, -0.026041,
            -0.059132, -0.072778, -0.019218, 0.004094, -0.069594, -0.030476, 0.08415, 0.020014, -0.028315, -0.081876, 0.021833,
            -0.085969, -0.036162, 0.047761, 0.06732, -0.049808, -0.069139, 0.054584, 0.031158, -0.019559, 0.095067, -0.094157,
            -0.021265, 0.029566, 0.060497, -0.0655, -0.009893, -0.008472, -0.015579, 0.075053, 0.002303, 0.010064, -0.061407,
            0.095976, 0.037526, 0.024904, -0.080511, 0.02081, 0.06823, -0.071869, -0.070504, 0.056631, 0.00361, 0.00064, -0.039801
        ];

        var vector = vectorRaw.Select(v=>(float) v).ToArray();

        var searchResult = await _qdrantHttpClient.SearchPoints(
            "test_collection_dim_100",
            new SearchPointsRequest(vector, 1)
            {
                WithVector = true,
                WithPayload = true,
            }
            ,
            CancellationToken.None);

        searchResult.Status.IsSuccess.Should().BeTrue();
    }
}
